#ifndef __M3_SRAM_MAP_H__
#define __M3_SRAM_MAP_H__ 
#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif
#include <soc_lpmcu_baseaddr_interface.h>
#include <soc_acpu_baseaddr_interface.h>
#include <m3_ddr_map.h>
#ifdef __FASTBOOT__
#define M3_SRAM_BASE (LPMCU_FIRMWARE_BACKUP_ADDR)
#else
#define M3_SRAM_BASE (SOC_LPMCU_LP_RAM_BASE_ADDR)
#endif
#define M3_SRAM_SIZE (LPMCU_RAM_SIZE)
#define M3_SRAM_AO_SIZE (0xB600)
#define AON_SYS_BASE (M3_SRAM_BASE)
#define AON_SYS_RESERVED_SIZE (0x0)
#define AON_SYS_SIZE (0x7600 - AON_SYS_RESERVED_SIZE)
#define AON_STORAGE_SOCP_BASE (AON_SYS_BASE + AON_SYS_SIZE + AON_SYS_RESERVED_SIZE)
#define AON_STORAGE_SOCP_SIZE (0x800)
#define INIT_PARA_BASE (AON_STORAGE_SOCP_BASE + AON_STORAGE_SOCP_SIZE)
#define INIT_PARA_SIZE (0x100)
#define RUNTIME_VAR_BASE (INIT_PARA_BASE + INIT_PARA_SIZE)
#define RUNTIME_VAR_SIZE (0x100)
#define LPMCU_TELE_MNTN_DATA_BASE (RUNTIME_VAR_BASE + RUNTIME_VAR_SIZE)
#define LPMCU_TELE_MNTN_DATA_SIZE (0x400)
#define DDR_REG_BACKUP_BASE (LPMCU_TELE_MNTN_DATA_BASE + LPMCU_TELE_MNTN_DATA_SIZE)
#define DDR_REG_BACKUP_SIZE (0x80)
#define DDR_TRAINNING_BASE (DDR_REG_BACKUP_BASE + DDR_REG_BACKUP_SIZE)
#define DDR_TRAINNING_SIZE (0x2D00)
#define DDR_PROFILE_BASE (DDR_TRAINNING_BASE + DDR_TRAINNING_SIZE)
#define DDR_PROFILE_SIZE (0x3F0)
#define DDR_POLICY_BASE (DDR_PROFILE_BASE + DDR_PROFILE_SIZE)
#define DDR_POLICY_SIZE (0x80)
#if ((DDR_POLICY_BASE + DDR_POLICY_SIZE - M3_SRAM_BASE) > (M3_SRAM_AO_SIZE))
#error m3_ao_region_size((DDR_POLICY_BASE + DDR_POLICY_SIZE - M3_SRAM_BASE)) used beyond (M3_SRAM_AO_SIZE)
#endif
#define SYS_CODE_SEC_BASE (M3_SRAM_BASE + M3_SRAM_AO_SIZE)
#define SYS_CODE_SEC_RESERVED_SIZE (0x00)
#define SYS_CODE_SEC_SIZE (0x11A00-SYS_CODE_SEC_RESERVED_SIZE)
#define SYS_BSS_SEC_BASE (SYS_CODE_SEC_BASE + SYS_CODE_SEC_SIZE + SYS_CODE_SEC_RESERVED_SIZE)
#define SYS_BSS_SEC_RESERVED_SIZE (0x00)
#define SYS_BSS_SEC_SIZE (0x3000-SYS_BSS_SEC_RESERVED_SIZE)
#if ((SYS_BSS_SEC_BASE + SYS_BSS_SEC_RESERVED_SIZE + SYS_BSS_SEC_SIZE - M3_SRAM_BASE) > (0x20000))
#error m3_ao_region_size((SYS_BSS_SEC_BASE + SYS_BSS_SEC_RESERVED_SIZE + SYS_BSS_SEC_SIZE - M3_SRAM_BASE)) used beyond (0x20000)
#endif
#define LPMCU_GEN_MNTN_BASE (M3_SRAM_BASE + M3_SRAM_SIZE - 0x2000)
#define LPMCU_GEN_MNTN_SIZE (0x800)
    #define EXC_SPECIAL_SAVE_BASE (LPMCU_GEN_MNTN_BASE)
    #define EXC_SPECIAL_SAVE_SIZE (0x30)
    #define DDRC_SAVE_TMP_BASE (EXC_SPECIAL_SAVE_BASE + EXC_SPECIAL_SAVE_SIZE)
    #define DDRC_SAVE_TMP_SIZE (0x10)
    #define OVERLAPPING_AREA_BASE (DDRC_SAVE_TMP_BASE + DDRC_SAVE_TMP_SIZE)
    #define OVERLAPPING_AREA_SIZE (0x3C0)
        #define INT_TRACK_BASE (OVERLAPPING_AREA_BASE)
        #define INT_TRACK_SIZE (0x2B0)
        #define SVFD_VOLT_DROP_BASE (INT_TRACK_BASE + INT_TRACK_SIZE)
        #define SVFD_VOLT_DROP_SIZE (0x10)
        #define TASK_TRACK_BASE (SVFD_VOLT_DROP_BASE + SVFD_VOLT_DROP_SIZE)
        #define TASK_TRACK_SIZE (0x100)
#if ((TASK_TRACK_BASE + TASK_TRACK_SIZE) > (OVERLAPPING_AREA_BASE + OVERLAPPING_AREA_SIZE))
#error "OVERLAPPING_AREA overflow!!!"
#endif
        #define REG_BACKUP_SRAM_BASE (OVERLAPPING_AREA_BASE)
        #define REG_BACKUP_SRAM_SIZE (0x70)
        #define STACK_BACKUP_SRAM_BASE (REG_BACKUP_SRAM_BASE + REG_BACKUP_SRAM_SIZE)
        #define STACK_BACKUP_SRAM_SIZE (0x300)
        #define DMA_REG_BACKUP_BASE (STACK_BACKUP_SRAM_BASE + STACK_BACKUP_SRAM_SIZE)
        #define DMA_REG_BACKUP_SIZE (0x50)
#if ((DMA_REG_BACKUP_BASE + DMA_REG_BACKUP_SIZE) > (OVERLAPPING_AREA_BASE + OVERLAPPING_AREA_SIZE))
#error "OVERLAPPING_AREA overflow!!!"
#endif
    #define DDRC_SAVE_DMC_RINT (OVERLAPPING_AREA_BASE + OVERLAPPING_AREA_SIZE)
    #define DDRC_SAVE_DMC_RINT_SIZE (0x10)
    #define DDR_PARA_TRANSFER_BASE (DDRC_SAVE_DMC_RINT)
    #define DDR_PARA_TRANSFER_SIZE (DDRC_SAVE_DMC_RINT_SIZE)
    #define DDRC_SAVE_BASE (DDRC_SAVE_DMC_RINT + DDRC_SAVE_DMC_RINT_SIZE)
    #define DDRC_SAVE_SIZE (0x3F0)
#if ((DDRC_SAVE_BASE + DDRC_SAVE_SIZE) > (LPMCU_GEN_MNTN_BASE + LPMCU_GEN_MNTN_SIZE))
#error "DDRC_SAVE overflow!!!"
#endif
#define LITTLE_CLUSTER_PROFILE_BASE (LPMCU_GEN_MNTN_BASE + LPMCU_GEN_MNTN_SIZE)
#define LITTLE_CLUSTER_PROFILE_SIZE (0x200)
#define BIG_CLUSTER_PROFILE_BASE (LITTLE_CLUSTER_PROFILE_BASE + LITTLE_CLUSTER_PROFILE_SIZE)
#define BIG_CLUSTER_PROFILE_SIZE (0x200)
    #define CPU_BASE_PROFILE_BASE(n) (LITTLE_CLUSTER_PROFILE_BASE + (n) * LITTLE_CLUSTER_PROFILE_SIZE)
#define GPU_BASE_PROFILE_BASE (BIG_CLUSTER_PROFILE_BASE + BIG_CLUSTER_PROFILE_SIZE)
#define GPU_BASE_PROFILE_SIZE (0x200)
#define MODEM_PARA_BASE (GPU_BASE_PROFILE_BASE + GPU_BASE_PROFILE_SIZE)
#define MODEM_PARA_SIZE (0x40)
#define REG_BACKUP_BASE (MODEM_PARA_BASE + MODEM_PARA_SIZE)
#define REG_BACKUP_SIZE (0x1A0)
#define REG_PMU_BASE (REG_BACKUP_BASE + REG_BACKUP_SIZE)
#define REG_PMU_SIZE (0x20)
#define SYS_DATA_SEC_BASE (REG_PMU_BASE + REG_PMU_SIZE)
#define SYS_DATA_SEC_RESERVED_SIZE (0x100)
#define SYS_DATA_SEC_SIZE (0xA00-SYS_DATA_SEC_RESERVED_SIZE)
#define SYS_HEAP_SEC_BASE (SYS_DATA_SEC_BASE + SYS_DATA_SEC_SIZE + SYS_DATA_SEC_RESERVED_SIZE)
#define SYS_HEAP_SEC_SIZE (0x200)
#define SYS_STACK_SEC_BASE (SYS_HEAP_SEC_BASE + SYS_HEAP_SEC_SIZE)
#define SYS_STACK_SEC_SIZE (0x400)
#if ((SYS_STACK_SEC_BASE + SYS_STACK_SEC_SIZE - M3_SRAM_BASE) > (M3_SRAM_SIZE))
#error "lpm3 sram overflow!!!"
#endif
#define M3_SRAM_ADDR_OFFSET(addr) ((addr) - M3_SRAM_BASE)
#ifndef __FASTBOOT__
#define LPRAM_ADDR_TO_AP_ADDR(addr) ((addr - SOC_LPMCU_LP_RAM_BASE_ADDR) + SOC_ACPU_LP_RAM_BASE_ADDR)
#endif
#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif
#endif
