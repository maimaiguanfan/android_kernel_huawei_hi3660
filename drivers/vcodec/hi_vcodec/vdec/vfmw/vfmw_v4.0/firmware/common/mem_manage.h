/*--------------------------------------------------------------------------------------------------------------------------*/
/*!!Warning: This is a key information asset of Huawei Tech Co.,Ltd                                                         */
/*CODEMARK:kOyQZYzjDpyGdBAEC2GaWinjiDDUykL9e8pckESWBbMVmSWkBuyJO01cTiy3TdzKxGk0oBQa
mSMf7J4FkTpfv/JzwTgKEHe/9N4yU5rqhEDlG50G/Vcvyq2txYFjqt/X5GLe/SnYbE4r/A06
+TaRl2fGTEEd3YBXyOVSvdtUywOZcVuAjeOU70Jd/9T34/2B4+wUiTtCNv7BDjQ4P/TNWKVP
JAn8RF8M3jQSd3Nfj2JPRwvfmbARLxPLAu9A0+xLYgFf4jjC9vd7JeBKfrlxLA==*/
/*--------------------------------------------------------------------------------------------------------------------------*/

#ifndef _VFMW_MEM_MANAGE_HEAD_
#define _VFMW_MEM_MANAGE_HEAD_

#ifdef __cplusplus
extern "C" {
#endif

#include "vfmw.h"


/*######################################################################*/
/*     常数                                                             */
/*######################################################################*/
#define MEM_MAN_ERR  -1
#define MEM_MAN_OK    0


/*###########################################################################################*/
/*     数据结构                                                                              */
/*###########################################################################################*/
typedef struct
{
    UADDR      PhyAddr;
    UINT32     Length;
    SINT32     IsSecMem;
    UINT8     *VirAddr;
} MEM_RECORD_S;

typedef struct
{
    UADDR MemBaseAddr;
    SINT32 MemSize;
} MEM_INIT_S;


/*###########################################################################################*/
/*     函数声明                                                                              */
/*###########################################################################################*/

/************************************************************************/
/*    初始化                                                            */
/************************************************************************/
VOID MEM_InitMemManager(MEM_INIT_S *pMemInit);

/************************************************************************/
/*    指定内存操作                                                      */
/************************************************************************/
VOID MEM_ManagerWithOperation(INIT_INTF_S *pIntf);

/************************************************************************/
/*    清除指定内存操作                                                  */
/************************************************************************/
VOID MEM_ManagerClearOperation(VOID);

/************************************************************************/
/*    添加记录                                                          */
/************************************************************************/
SINT32 MEM_AddMemRecord(UADDR PhyAddr, VOID* VirAddr, UINT32 Length);

/************************************************************************/
/*   记录表打印                                                         */
/************************************************************************/
VOID MEM_DumpRecord(VOID);

/************************************************************************/
/*    删除记录                                                          */
/************************************************************************/
SINT32 MEM_DelMemRecord(UADDR PhyAddr, VOID* VirAddr, UINT32 Length);

/************************************************************************/
/*   地址转换： 物理地址 -> 虚拟地址                                    */
/************************************************************************/
VOID *MEM_Phy2Vir(UADDR PhyAddr);

/************************************************************************/
/*   地址转换： 虚拟地址 -> 物理地址                                    */
/************************************************************************/
UADDR MEM_Vir2Phy(UINT8 *VirAddr);

/************************************************************************/
/*   mem操作： 向指定的物理地址写入一个word                             */
/************************************************************************/
VOID MEM_WritePhyWord(UADDR PhyAddr, UINT32 Data32);

/************************************************************************
mem操作： 向指定的物理地址读入一个word
          不可读时返回默认值0                                  
************************************************************************/
UINT32 MEM_ReadPhyWord(UADDR PhyAddr);

/************************************************************************/
/*   mem操作： 拷贝一片数据（phy -> phy）                               */
/************************************************************************/
VOID MEM_CopyPhy2Phy(UADDR DstPhyAddr, UADDR SrcPhyAddr, UINT32 Length);

/************************************************************************/
/*   mem操作： 拷贝一片数据（phy -> vir）                               */
/************************************************************************/
VOID MEM_CopyPhy2Vir(UINT8 *DstVirAddr, UADDR SrcPhyAddr, UINT32 Length);

/************************************************************************/
/*   mem操作： 拷贝一片数据（vir -> phy）                               */
/************************************************************************/
VOID MEM_CopyVir2Phy(UADDR DstPhyAddr, UINT8* SrcVirAddr, UINT32 Length);

/************************************************************************/
/*   申请内存块(MEM_RECORD_S)                                           */
/************************************************************************/
SINT32 MEM_AllocMemBlock(SINT8 *MemName, UINT32 ExpectedLen, MEM_RECORD_S *pMemRecord, SINT32 IsCached);

/************************************************************************/
/*   释放内存块                                                         */
/************************************************************************/
VOID   MEM_ReleaseMemBlock(UADDR PhyAddr, UINT8 *VirAddr );

/************************************************************************/
/*   申请内存块(MEM_DESC_S)                                             */
/************************************************************************/
SINT32 MEM_AllocMemBlock_2(UINT8 *pMemName, UINT32 ExpectedLen, MEM_DESC_S *pMemDesc, UINT32 IsCached);

/************************************************************************/
/*   释放内存块(MEM_DESC_S)                                             */
/************************************************************************/
SINT32 MEM_ReleaseMemBlock_2(MEM_DESC_S *pMemDesc);

/************************************************************************/
/*   映射寄存器                                                         */
/************************************************************************/
SINT32 MEM_MapRegisterAddr(UADDR RegStartPhyAddr, UINT32 RegByteLen, MEM_RECORD_S *pMemRecord );
VOID   MEM_UnmapRegisterAddr(UADDR PhyAddr, UINT8 *VirAddr, UINT32 Size);


#ifdef __cplusplus
}
#endif

#endif /* end of '#ifndef _VFMW_MEM_MANAGE_HEAD_' */

